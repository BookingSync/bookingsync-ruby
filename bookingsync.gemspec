# Generated by jeweler
# DO NOT EDIT THIS FILE DIRECTLY
# Instead, edit Jeweler::Tasks in Rakefile, and run 'rake gemspec'
# -*- encoding: utf-8 -*-

Gem::Specification.new do |s|
  s.name = %q{bookingsync}
  s.version = "0.1.0"

  s.required_rubygems_version = Gem::Requirement.new(">= 0") if s.respond_to? :required_rubygems_version=
  s.authors = ["Sebastien Grosjean"]
  s.date = %q{2011-01-07}
  s.description = %q{  Ruby wrapper around BookingSync API
  
  Configure by adding the following:

  require 'bookingsync'
  BookingSync::Base.user = 'your_api_auth_token'
}
  s.email = %q{public@zencocoon.com}
  s.extra_rdoc_files = [
    "LICENSE.txt",
    "README.md"
  ]
  s.files = [
    ".document",
    ".rspec",
    "Gemfile",
    "Gemfile.lock",
    "LICENSE.txt",
    "README.md",
    "Rakefile",
    "VERSION",
    "autotest/discover.rb",
    "examples/config_initializers_bookingsync.rb",
    "examples/sample.rb",
    "lib/bookingsync.rb",
    "lib/bookingsync/base.rb",
    "lib/bookingsync/booking.rb",
    "lib/bookingsync/client.rb",
    "lib/bookingsync/pagination.rb",
    "lib/bookingsync/rental.rb",
    "spec/bookingsync/base_spec.rb",
    "spec/bookingsync/booking_spec.rb",
    "spec/bookingsync/client_spec.rb",
    "spec/bookingsync/pagination_behavior.rb",
    "spec/bookingsync/pagination_spec.rb",
    "spec/bookingsync/rental_spec.rb",
    "spec/spec_helper.rb"
  ]
  s.homepage = %q{http://github.com/BookingSync/bookingsync-ruby}
  s.licenses = ["MIT"]
  s.require_paths = ["lib"]
  s.rubygems_version = %q{1.3.7}
  s.summary = %q{Ruby wrapper around BookingSync API}
  s.test_files = [
    "examples/config_initializers_bookingsync.rb",
    "examples/sample.rb",
    "spec/bookingsync/base_spec.rb",
    "spec/bookingsync/booking_spec.rb",
    "spec/bookingsync/client_spec.rb",
    "spec/bookingsync/pagination_behavior.rb",
    "spec/bookingsync/pagination_spec.rb",
    "spec/bookingsync/rental_spec.rb",
    "spec/spec_helper.rb"
  ]

  if s.respond_to? :specification_version then
    current_version = Gem::Specification::CURRENT_SPECIFICATION_VERSION
    s.specification_version = 3

    if Gem::Version.new(Gem::VERSION) >= Gem::Version.new('1.2.0') then
      s.add_runtime_dependency(%q<activeresource>, [">= 3.0.0"])
      s.add_development_dependency(%q<rspec>, ["~> 2.2.0"])
      s.add_development_dependency(%q<bundler>, ["~> 1.0.0"])
      s.add_development_dependency(%q<jeweler>, ["~> 1.5.1"])
      s.add_development_dependency(%q<rcov>, [">= 0"])
      s.add_development_dependency(%q<ZenTest>, [">= 0"])
      s.add_runtime_dependency(%q<activeresource>, [">= 3.0.0"])
      s.add_development_dependency(%q<rspec>, [">= 2.2.0"])
      s.add_development_dependency(%q<bundler>, ["~> 1.0.0"])
      s.add_development_dependency(%q<jeweler>, ["~> 1.5.1"])
      s.add_development_dependency(%q<rcov>, [">= 0"])
      s.add_development_dependency(%q<ZenTest>, [">= 0"])
    else
      s.add_dependency(%q<activeresource>, [">= 3.0.0"])
      s.add_dependency(%q<rspec>, ["~> 2.2.0"])
      s.add_dependency(%q<bundler>, ["~> 1.0.0"])
      s.add_dependency(%q<jeweler>, ["~> 1.5.1"])
      s.add_dependency(%q<rcov>, [">= 0"])
      s.add_dependency(%q<ZenTest>, [">= 0"])
      s.add_dependency(%q<activeresource>, [">= 3.0.0"])
      s.add_dependency(%q<rspec>, [">= 2.2.0"])
      s.add_dependency(%q<bundler>, ["~> 1.0.0"])
      s.add_dependency(%q<jeweler>, ["~> 1.5.1"])
      s.add_dependency(%q<rcov>, [">= 0"])
      s.add_dependency(%q<ZenTest>, [">= 0"])
    end
  else
    s.add_dependency(%q<activeresource>, [">= 3.0.0"])
    s.add_dependency(%q<rspec>, ["~> 2.2.0"])
    s.add_dependency(%q<bundler>, ["~> 1.0.0"])
    s.add_dependency(%q<jeweler>, ["~> 1.5.1"])
    s.add_dependency(%q<rcov>, [">= 0"])
    s.add_dependency(%q<ZenTest>, [">= 0"])
    s.add_dependency(%q<activeresource>, [">= 3.0.0"])
    s.add_dependency(%q<rspec>, [">= 2.2.0"])
    s.add_dependency(%q<bundler>, ["~> 1.0.0"])
    s.add_dependency(%q<jeweler>, ["~> 1.5.1"])
    s.add_dependency(%q<rcov>, [">= 0"])
    s.add_dependency(%q<ZenTest>, [">= 0"])
  end
end

